---
root: true

ignorePatterns:
  - 'node_modules/**/*'
  - '.next'

env:
  browser: true
  node: true

parser: '@babel/eslint-parser'
parserOptions:
  ecmaVersion: 12
  ecmaFeatures:
    jsx: true

extends:
  - 'xo-space'
  - 'xo-react/space'
  - 'plugin:jsx-a11y/recommended'
  - 'plugin:@next/next/recommended'

plugins:
  - '@babel'
  - 'jsx-a11y'
  - 'tailwindcss'

settings:
  react:
    version: detect

rules:
  array-element-newline: off
  arrow-body-style: off
  capitalized-comments: off
  comma-dangle: ['error', 'never']
  curly: ['error', 'multi-line']
  func-names: ['error', 'as-needed']
  object-curly-spacing: ['error', 'always']
  no-multiple-empty-lines: ['error', { max: 2, maxEOF: 1, maxBOF: 0 }]
  no-negated-condition: off
  keyword-spacing: ['error', { overrides: { if: { after: false }, for: { after: false }, while: { after: false }, catch: { after: false } } }]
  react/jsx-tag-spacing: ['error', { closingSlash: 'never', beforeSelfClosing: 'always', afterOpening: 'never', beforeClosing: 'never' }]
  react/boolean-prop-naming: off
  react/no-array-index-key: off
  react/jsx-fragments: off
  react/no-unescaped-entities: ['error', { forbid: ['>', '}' ] }]
  react/state-in-constructor: ['error', 'always']
  react/static-property-placement: ['error', 'property assignment']
  react/prop-types: ['error', { ignore: ['className', 'children'] }]
  jsx-a11y/no-onchange: off
  jsx-a11y/alt-text: ['warn', { elements: ['img'], img: ['Image', 'Picture'] }]
  tailwindcss/no-contradicting-classname: ['error']

overrides:
  - files: '**/*.mdx'
    parser: 'eslint-mdx'
    extends:
      - 'plugin:mdx/recommended'
    rules:
      indent: off
      spaced-comment: off
      react/jsx-indent: off
      semi: off
