{"version":3,"sources":["webpack://lambda-log-site/./src/components/ui/terminal.js","webpack://lambda-log-site/./src/pages/index.js"],"names":["StyledTerminal","styled","darken","props","theme","colors","black","white","fonts","monospace","gray","title","children","className","StyledHomePage","ContentContainer","primary","red","showHero","href","plain"],"mappings":"uNAMMA,EAAiBC,oBAAH,oEAAGA,CAAH,g2BAWIC,QAAO,IAAM,YAkBbA,QAAO,GAAK,YAKZA,QAAO,GAAK,YAKZA,QAAO,IAAM,YAMtB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAWnBJ,QAAO,IAAM,YAEb,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,SAGjC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,MAAMC,aAO7B,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOK,QA8B7C,EAxBsB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC9B,OACE,gBAACZ,EAAD,KACE,uBAAKa,UAAU,kBACb,uBAAKA,UAAU,mBACb,wBAAMA,UAAU,UAChB,wBAAMA,UAAU,aAChB,wBAAMA,UAAU,cAElB,uBAAKA,UAAU,gBAAgBF,GAC/B,uBAAKE,UAAU,YAEjB,uBAAKA,UAAU,oBACZD,K,UCpFHE,EAAiBb,oBAAH,6DAAGA,CAAH,yTAChBc,KAiBsB,SAAAZ,GAAK,OAAIA,EAAMC,MAAMC,OAAOW,WAG1B,SAAAb,GAAK,OAAID,QAAO,GAAKC,EAAMC,MAAMC,OAAOW,YAK1C,SAAAb,GAAK,OAAIA,EAAMC,MAAMC,OAAOY,OAG1B,SAAAd,GAAK,OAAID,QAAO,GAAKC,EAAMC,MAAMC,OAAOY,QAqDpE,EA/CiB,WACf,OACE,gBAAC,IAAD,CAAQC,UAAQ,EAACP,MAAM,QACrB,gBAACG,EAAD,KACE,sBAAID,UAAU,WAAd,cACA,qBAAGA,UAAU,SAAb,KACI,gBAAC,IAAD,CAAMM,KAAK,4CAAX,mBADJ,wSAI2D,0CAJ3D,KAOA,gBAAC,EAAD,CAAeR,MAAM,sBACnB,uBAAKE,UAAU,QAAf,kCAKF,kCACE,4DACA,kTAOF,sCACA,uDAA8B,uCAA9B,uCACA,0BACE,8GACA,oHACA,+FACA,0FACA,kFACA,qFACA,0FACA,+CAGF,gBAAC,IAAD,CAAMO,OAAK,EAACD,KAAK,8CAA8CN,UAAU,cAAzE,kBACA,gBAAC,IAAD,CAAMO,OAAK,EAACD,KAAK,2CAA2CN,UAAU,WAAtE","file":"component---src-pages-index-js-542dea504fffa5438caf.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { darken } from 'polished';\n\n\nconst StyledTerminal = styled.div`\n  box-shadow: 0 10px 20px 1px rgba(0, 0, 0, 0.15);\n  margin-bottom: 2rem;\n  border-radius: 8px;\n\n  .terminal-title {\n    display: flex;\n    justify-content: space-between;\n    background-color: #dde1e5;\n    padding: 0.6rem 1rem;\n    border-radius: 8px 8px 0 0;\n    border: 1px solid ${darken(0.08, '#dde1e5')};\n    border-bottom: none;\n\n    .context-buttons {\n      display: flex;\n      align-items: center;\n\n      span {\n        display: block;\n        border-radius: 50%;\n        width: 13px;\n        height: 13px;\n        margin-right: 0.4rem;\n        border: 1px solid;\n      }\n\n      .close {\n        background-color: #fe6057;\n        border-color: ${darken(0.1, '#fe6057')};\n      }\n\n      .minimize {\n        background-color: #ffbd2d;\n        border-color: ${darken(0.1, '#ffbd2d')};\n      }\n\n      .maximize {\n        background-color: #28cb42;\n        border-color: ${darken(0.05, '#28cb42')};\n      }\n    }\n\n    .window-title {\n      font-size: 0.9rem;\n      color: ${props => props.theme.colors.black};\n      user-select: none;\n    }\n\n    .spacer {\n      width: 56px;\n    }\n  }\n\n  .terminal-content {\n    min-height: 6rem;\n    border: 1px solid ${darken(0.05, '#dde1e5')};\n    border-top: none;\n    background-color: ${props => props.theme.colors.white};\n    border-radius: 0 0 8px 8px;\n    padding: 1rem;\n    font-family: ${props => props.theme.fonts.monospace};\n    font-weight: 500;\n\n    .line {\n      &:before {\n        content: '$';\n        margin-right: 0.5rem;\n        color: ${props => props.theme.colors.gray};\n      }\n    }\n  }\n`;\n\nconst TerminalFrame = ({ title, children }) => {\n  return (\n    <StyledTerminal>\n      <div className=\"terminal-title\">\n        <div className=\"context-buttons\">\n          <span className=\"close\" />\n          <span className=\"minimize\" />\n          <span className=\"maximize\" />\n        </div>\n        <div className=\"window-title\">{title}</div>\n        <div className=\"spacer\" />\n      </div>\n      <div className=\"terminal-content\">\n        {children}\n      </div>\n    </StyledTerminal>\n  );\n};\n\nTerminalFrame.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node\n};\n\nexport default TerminalFrame;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { darken } from 'polished';\nimport Layout from '@layouts';\nimport { ContentContainer } from '@styles/components';\nimport TerminalFrame from '@ui/terminal';\nimport Link from '@ui/link';\n\n\nconst StyledHomePage = styled.div`\n  ${ContentContainer}\n\n  .intro {\n    font-weight: 400;\n    font-size: 1.2rem;\n  }\n\n  a.btn {\n    display: inline-block;\n    border-radius: 5px;\n    margin-right: 1rem;\n    padding: 0.6rem 1rem;\n    color: #fff;\n    font-weight: 600;\n    transition: background-color 0.2s;\n\n    &.github {\n      background-color: ${props => props.theme.colors.primary};\n\n      &:hover {\n        background-color: ${props => darken(0.1, props.theme.colors.primary)};\n      }\n    }\n\n    &.npm {\n      background-color: ${props => props.theme.colors.red};\n\n      &:hover {\n        background-color: ${props => darken(0.1, props.theme.colors.red)};\n      }\n    }\n  }\n`;\n\nconst HomePage = () => {\n  return (\n    <Layout showHero title=\"Home\">\n      <StyledHomePage>\n        <h1 className=\"sr-only\">Lambda Log</h1>\n        <p className=\"intro\">\n          A <Link href=\"https://www.npmjs.com/package/lambda-log\">Node.js package</Link> to\n          facilitate and enforce logging standards from processes and applications running within Lambda Functions, various AWS\n          Services, and wherever JSON logs are desired. Lambda Log formats your log messages as JSON for simple parsing and\n          filtering within tools such as CloudWatch Logs. Supports <strong>Node 10+</strong>.\n        </p>\n\n        <TerminalFrame title=\"Install Lambda Log\">\n          <div className=\"line\">\n            npm install --save lambda-log\n          </div>\n        </TerminalFrame>\n\n        <blockquote>\n          <strong>Why another Lambda logger?</strong>\n          <p>\n            There are others out there, but seemed to be convoluted, included more functionality than needed, not maintained,\n            or not configurable enough. I created lambda-log to include the important functionality from other loggers, but still\n            keeping it simple with minimal dependencies.\n          </p>\n        </blockquote>\n\n        <h2>Features</h2>\n        <p>Anyone can log JSON to the <code>console</code>, but with Lambda Log you also get:</p>\n        <ul>\n          <li>Metadata and tags that may be set globally or individually for each log message.</li>\n          <li>Error and Error-like objects logged include stacktraces in the metadata automatically.</li>\n          <li>Each log message emits an event to allow third-party integration.</li>\n          <li>Pluggable and customizable by extending the LambdaLog class.</li>\n          <li>Pretty-printing of the JSON log message in dev mode.</li>\n          <li>Well documented, commented, and maintained source code.</li>\n          <li>Over 1 million downloads and more than 20k weekly downloads.</li>\n          <li>Small footprint.</li>\n        </ul>\n\n        <Link plain href=\"https://github.com/KyleRoss/node-lambda-log\" className=\"btn github\">View on Github</Link>\n        <Link plain href=\"https://www.npmjs.com/package/lambda-log\" className=\"btn npm\">View on NPM</Link>\n      </StyledHomePage>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}